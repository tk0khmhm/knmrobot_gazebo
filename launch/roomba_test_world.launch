<?xml version="1.0" ?>
<launch>

	<!-- these are the arguments you can pass this launch file, for example paused:=true -->
	<arg name="paused" default="false"/>
	<arg name="use_sim_time" default="true"/>
	<arg name="gui" default="true"/>
	<arg name="headless" default="false"/>
	<arg name="debug" default="false"/>

	<!-- We resume the logic in empty_world.launch, changing only the name of the worl to launched -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find knmrobot_gazebo)/world/test_building.world"/>
		<arg name="debug" value="$(arg debug)"/>
		<arg name="gui" value="$(arg gui)"/>
		<arg name="paused" value="$(arg paused)"/>
		<arg name="use_sim_time" value="$(arg use_sim_time)"/>
		<arg name="headless" value="$(arg headless)"/>
	</include>

	<!-- Load the URDF into the ROS Parameter Server -->
	<param name="robot_description"
		command="$(find xacro)/xacro.py '$(find knmrobot_description)/urdf/roomba_test.urdf.xacro'"/>

	<!-- Run a python script to the send a service call to gazebo_ros to spawn aURDF robot -->
	
	<!--arg name="robot_description" value="/home/amsl/ros_catkin_ws/src/knmrobot_description/urdf/roomba_test.urdf"/-->

	<!--node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
		args="-urdf -z 1 -model infant -file /home/amsl/ros_catkin_ws/src/knmrobot_description/urdf/roomba_test.urdf"/-->
	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
		args="-urdf -z 1 -model roomba -param robot_description"/>

</launch>
